# Copyright Alec Thilenius 2015

# SSL Files
ssl_certificate         /etc/ssl/www_scorchforge_com.crt;
ssl_certificate_key     /etc/ssl/www_scorchforge_com.key;

# Redirect all HTTP to HTTPS with a 301 PERMANENT REDIRECT
server {
  # Listen on ipv4 and ipv6 for requests
  listen 80;
  listen [::]:80;
  # Listen for requests on all subdomains and the naked domain
  server_name scorchforge.com *.scorchforge.com;
  # Check if this is a subdomain request rather the naked domain
  if ($http_host ~ (.*)\.scorchforge\.com) {
      # Yank the subdomain from the regex match above
      set $subdomain $1;
      # Handle the subdomain redirect to HTTPS
      rewrite ^ https://$subdomain.scorchforge.com$request_uri permanent;
      break;
  }
  # Handle the naked domain redirect
  rewrite ^ https://scorchforge.com$request_uri permanent;
}

# Shipyard
server {
  listen 443 ssl;
  server_name docker.*;
  location / {
    proxy_pass http://172.17.0.1:8080/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

# TeamCity
server {
  listen 443 ssl;
  server_name ci.*;
  location / {
    proxy_pass http://172.17.0.1:8111/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

# Beta build
server {
  listen 443 ssl;
  server_name beta.*;
  location / {
    proxy_pass http://172.17.0.1:5001/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

# Dev build
server {
  listen 443 ssl;
  server_name dev.*;
  location / {
    proxy_pass http://172.17.0.1:5002/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
  }
}

# Production
server {
  listen 443 ssl;
  server_name scorchforge.com www.scorchforge.com;
  location / {
    proxy_pass http://172.17.0.1:5000/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
